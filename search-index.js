var searchIndex = {};
searchIndex['sherwood'] = {"items":[[0,"","sherwood","",null,null],[3,"Error","","ForestDB error",null,null],[3,"IteratorOptions","","Iterator options",null,null],[3,"Config","","FileHandle configuration",null,null],[3,"ConfigBuilder","","Builds configuration for a file handle",null,null],[3,"FileHandle","","ForestDB file handle",null,null],[3,"FileHandleInfo","","Provides stats for file handle",null,null],[3,"StoreConfig","","Configuration of KvHandle",null,null],[3,"KvHandle","","ForestDB key value store",null,null],[3,"Iterator","","Iterator over key-value store",null,null],[3,"Doc","","Document which was fully\nretrieved from db",null,null],[3,"Meta","","Meta information about a document\nkey, seq_num, offset and meta itself",null,null],[4,"CommitOptions","","Commit options",null,null],[13,"Normal","","Commit normally",0,null],[13,"ManualWalFlush","","Commit and flush WAL",0,null],[4,"IsolationLevel","","Transaction isolation level",null,null],[13,"ReadCommitted","","Prevent a transaction from reading uncommitted data from other\ntransactions.",1,null],[13,"ReadUncommited","","Allow a transaction to see uncommitted data from other transaction.",1,null],[4,"SeekOptions","","Specifies behavior of iterator if requested key\nis not found",null,null],[13,"Higher","","If seek key does not exist return the next sorted\nkey higher than it",2,null],[13,"Lower","","If seek key does not exist return the previous sorted\nkey lower than it",2,null],[4,"Durability","","Durability options",null,null],[13,"Sync","","Synchronous commit through OS page cache.",3,null],[13,"DirectSync","","Synchronous commit through the direct IO option to bypass\nthe OS page cache.",3,null],[13,"Async","","Asynchronous commit through OS page cache.",3,null],[13,"DirectAsync","","Asynchronous commit through the direct IO option to bypass\nthe OS page cache.",3,null],[4,"Location","","Specifies how to search for document",null,null],[13,"Key","","Find document by key",4,null],[13,"Offset","","Find document by raw data offset",4,null],[13,"SeqNum","","Find document by document sequence number",4,null],[5,"init","","Initializes ForestDB. Usually is called automatically",null,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[5,"shutdown","","Forces ForestDB shutdown: closing everything and terminating\ncompactor thread",null,{"inputs":[],"output":{"name":"result"}}],[6,"FdbResult","","ForestDB result",null,null],[6,"Store","","Read-write key-value  handle",null,null],[6,"Snapshot","","Read-only key-value handle",null,null],[17,"NONE","","Empty flags for iterator",null,null],[17,"NO_DELETES","","Skip deleted documents",null,null],[17,"SKIP_MIN_KEY","","Exclude range minimum value",null,null],[17,"SKIP_MAX_KEY","","Exclude range maximum value",null,null],[8,"KeyRange","","Trait which allows to create custom key range iterators",null,null],[10,"min_key","","",5,{"inputs":[{"name":"keyrange"}],"output":{"name":"option"}}],[10,"max_key","","",5,{"inputs":[{"name":"keyrange"}],"output":{"name":"option"}}],[11,"options","","",5,{"inputs":[{"name":"keyrange"}],"output":{"name":"iteratoroptions"}}],[8,"SeqRange","","Trait which allows to create custom seq num iterators",null,null],[10,"min_seq","","",6,{"inputs":[{"name":"seqrange"}],"output":{"name":"u64"}}],[10,"max_seq","","",6,{"inputs":[{"name":"seqrange"}],"output":{"name":"u64"}}],[11,"options","","",6,{"inputs":[{"name":"seqrange"}],"output":{"name":"iteratoroptions"}}],[8,"DocKey","","Trait for accessing key data from a document representation",null,null],[10,"get_raw_key","","Retrieves document key as raw data",7,{"inputs":[{"name":"dockey"}],"output":{"name":"option"}}],[11,"get_key","","Converts key into corresponding data",7,{"inputs":[{"name":"dockey"}],"output":{"name":"option"}}],[8,"DocBody","","Trait for accessing document body",null,null],[10,"set_body","","Sets document body, data is copied",8,{"inputs":[{"name":"docbody"},{"name":"b"}],"output":{"name":"fdbresult"}}],[10,"set_meta","","Sets document meta, data is copied",8,{"inputs":[{"name":"docbody"},{"name":"m"}],"output":{"name":"fdbresult"}}],[10,"get_raw_body","","Retrieves body as raw bytes",8,{"inputs":[{"name":"docbody"}],"output":{"name":"option"}}],[11,"get_body","","Converts body",8,{"inputs":[{"name":"docbody"}],"output":{"name":"option"}}],[8,"DocMeta","","Trait for accessing document metadata",null,null],[10,"get_raw_meta","","Retrieves meta as raw bytes",9,{"inputs":[{"name":"docmeta"}],"output":{"name":"option"}}],[11,"get_meta","","Converts meta",9,{"inputs":[{"name":"docmeta"}],"output":{"name":"option"}}],[10,"seq_num","","Returns sequence number for document",9,{"inputs":[{"name":"docmeta"}],"output":{"name":"u64"}}],[10,"is_deleted","","Checks if document was deleted",9,{"inputs":[{"name":"docmeta"}],"output":{"name":"bool"}}],[10,"offset","","Returns raw offset of document in file",9,{"inputs":[{"name":"docmeta"}],"output":{"name":"u64"}}],[8,"FromBytes","","Trait to convert value from a byte slice to a corresponding type",null,null],[10,"from_bytes","","",10,null],[11,"clone","","",11,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_code","","",11,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"is_not_found","","",11,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"description","","",11,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"fmt","","",11,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"commitoptions"}],"output":{"name":"commitoptions"}}],[11,"clone","","",1,{"inputs":[{"name":"isolationlevel"}],"output":{"name":"isolationlevel"}}],[11,"hash","","",12,null],[11,"cmp","","",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"iteratoroptions"}],"output":{"name":"iteratoroptions"}}],[11,"eq","","",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",12,{"inputs":[{"name":"iteratoroptions"}],"output":{"name":"iteratoroptions"}}],[11,"all","","Returns the set containing all flags.",12,{"inputs":[{"name":"iteratoroptions"}],"output":{"name":"iteratoroptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",12,{"inputs":[{"name":"iteratoroptions"}],"output":{"name":"u16"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"u16"}],"output":{"name":"iteratoroptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,{"inputs":[{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",12,{"inputs":[{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"iteratoroptions"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"iteratoroptions"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"iteratoroptions"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",12,{"inputs":[{"name":"iteratoroptions"},{"name":"iteratoroptions"}],"output":{"name":"iteratoroptions"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",12,{"inputs":[{"name":"iteratoroptions"}],"output":{"name":"iteratoroptions"}}],[11,"clone","","",2,{"inputs":[{"name":"seekoptions"}],"output":{"name":"seekoptions"}}],[11,"clone","","",3,{"inputs":[{"name":"durability"}],"output":{"name":"durability"}}],[11,"clone","","",13,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"new","","",13,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"custom","","",13,{"inputs":[{"name":"config"}],"output":{"name":"configbuilder"}}],[11,"default","","",13,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"new","","",14,{"inputs":[{"name":"configbuilder"}],"output":{"name":"configbuilder"}}],[11,"cache_size","","Sets cache size\n0 to disable cache at all\nGlobal for all file handles",14,{"inputs":[{"name":"configbuilder"},{"name":"u64"}],"output":{"name":"configbuilder"}}],[11,"wal_threshold","","Sets WAL threshold\nLocal to file handle",14,{"inputs":[{"name":"configbuilder"},{"name":"u64"}],"output":{"name":"configbuilder"}}],[11,"read_only","","Opens file handle in read-only mode",14,{"inputs":[{"name":"configbuilder"}],"output":{"name":"configbuilder"}}],[11,"durability","","Change durability options\nLocal to file handle",14,{"inputs":[{"name":"configbuilder"},{"name":"durability"}],"output":{"name":"configbuilder"}}],[11,"chunk_size","","Chunk size that is used to build B+-tree at each level\nDefault 8 bytes, min 4 bytes, max 64 bytes\nLocal to file handle",14,{"inputs":[{"name":"configbuilder"},{"name":"u16"}],"output":{"name":"configbuilder"}}],[11,"block_size","","Size of block that is a unit of IO operations.\nDefault 4Kb, min 1Kb max 128Kb.\nGlobal across all files",14,{"inputs":[{"name":"configbuilder"},{"name":"u32"}],"output":{"name":"configbuilder"}}],[11,"build","","",14,{"inputs":[{"name":"configbuilder"}],"output":{"name":"config"}}],[11,"open","","Opens database with specified config",15,{"inputs":[{"name":"filehandle"},{"name":"path"},{"name":"config"}],"output":{"name":"fdbresult"}}],[11,"get_default_store","","Retrieves default store",15,{"inputs":[{"name":"filehandle"},{"name":"storeconfig"}],"output":{"name":"fdbresult"}}],[11,"get_store","","Retrieves store by name",15,{"inputs":[{"name":"filehandle"},{"name":"str"},{"name":"storeconfig"}],"output":{"name":"fdbresult"}}],[11,"commit","","Commit all pending doc changes",15,{"inputs":[{"name":"filehandle"},{"name":"commitoptions"}],"output":{"name":"fdbresult"}}],[11,"compact","","Writes compacted database to new_path. If it is set to None - it'll be in-place\ncompaction",15,{"inputs":[{"name":"filehandle"},{"name":"option"}],"output":{"name":"fdbresult"}}],[11,"estimate_size","","Estimates space used by file",15,{"inputs":[{"name":"filehandle"}],"output":{"name":"u64"}}],[11,"begin_transaction","","Starts a transaction with specified isolation level",15,{"inputs":[{"name":"filehandle"},{"name":"isolationlevel"}],"output":{"name":"fdbresult"}}],[11,"end_transaction","","Ends current transaction with specified commit options",15,{"inputs":[{"name":"filehandle"},{"name":"commitoptions"}],"output":{"name":"fdbresult"}}],[11,"abort_transaction","","Aborts current transaction",15,{"inputs":[{"name":"filehandle"}],"output":{"name":"fdbresult"}}],[11,"get_info","","",15,{"inputs":[{"name":"filehandle"}],"output":{"name":"fdbresult"}}],[11,"clone","","",15,{"inputs":[{"name":"filehandle"}],"output":{"name":"filehandle"}}],[11,"drop","","",15,{"inputs":[{"name":"filehandle"}],"output":null}],[11,"fmt","","",15,{"inputs":[{"name":"filehandle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"filehandleinfo"}],"output":{"name":"filehandleinfo"}}],[11,"file_size","","Returns total size occupied by db",16,{"inputs":[{"name":"filehandleinfo"}],"output":{"name":"u64"}}],[11,"space_used","","Returns size occupied by live docs",16,{"inputs":[{"name":"filehandleinfo"}],"output":{"name":"u64"}}],[11,"usage_ratio","","Returns ratio of used_size/total_size",16,{"inputs":[{"name":"filehandleinfo"}],"output":{"name":"f64"}}],[11,"doc_count","","Number of live documents",16,{"inputs":[{"name":"filehandleinfo"}],"output":{"name":"u64"}}],[11,"clone","","",17,{"inputs":[{"name":"storeconfig"}],"output":{"name":"storeconfig"}}],[11,"default","","",17,{"inputs":[{"name":"storeconfig"}],"output":{"name":"storeconfig"}}],[11,"get_value","","Sets a value for key (plain KV mode)",18,{"inputs":[{"name":"kvhandle"},{"name":"k"}],"output":{"name":"fdbresult"}}],[11,"key_iter","","Creates a new iterator through key range",18,{"inputs":[{"name":"kvhandle"},{"name":"t"},{"name":"bool"}],"output":{"name":"fdbresult"}}],[11,"seq_iter","","Creates a new iterator through range of seq numbers",18,{"inputs":[{"name":"kvhandle"},{"name":"t"},{"name":"bool"}],"output":{"name":"fdbresult"}}],[11,"get_doc","","Retrieves whole document specified by location",18,{"inputs":[{"name":"kvhandle"},{"name":"location"}],"output":{"name":"fdbresult"}}],[11,"get_meta","","Retrieves only meta data from document\nNote: it doesn't support retrieval through offset\nand will panic if corresponding location is used",18,{"inputs":[{"name":"kvhandle"},{"name":"location"}],"output":{"name":"fdbresult"}}],[11,"seq_num","","Returns max seq number of current store",18,{"inputs":[{"name":"kvhandle"}],"output":{"name":"fdbresult"}}],[11,"snapshot","","Creates a snapshot on specified seq_num",18,{"inputs":[{"name":"kvhandle"},{"name":"u64"}],"output":{"name":"fdbresult"}}],[11,"set_value","","Retrieves a value by key (plain KV mode)",18,{"inputs":[{"name":"kvhandle"},{"name":"k"},{"name":"v"}],"output":{"name":"fdbresult"}}],[11,"del_value","","Deletes a value by key (plain KV mode)",18,{"inputs":[{"name":"kvhandle"},{"name":"k"}],"output":{"name":"fdbresult"}}],[11,"set_doc","","Sets the document",18,{"inputs":[{"name":"kvhandle"},{"name":"doc"}],"output":{"name":"fdbresult"}}],[11,"del_doc","","Deletes the document",18,{"inputs":[{"name":"kvhandle"},{"name":"doc"}],"output":{"name":"fdbresult"}}],[11,"del_meta","","Deletes the document specified by available meta",18,{"inputs":[{"name":"kvhandle"},{"name":"meta"}],"output":{"name":"fdbresult"}}],[11,"rollback","","Rollbacks kv handle to specified seq num",18,{"inputs":[{"name":"kvhandle"},{"name":"u64"}],"output":{"name":"fdbresult"}}],[11,"clear","","Clears KV store, i.e. deletes all docs",18,{"inputs":[{"name":"kvhandle"}],"output":{"name":"fdbresult"}}],[11,"clone","","",18,{"inputs":[{"name":"kvhandle"}],"output":{"name":"kvhandle"}}],[11,"to_next","","Moves to next key",19,{"inputs":[{"name":"iterator"}],"output":{"name":"fdbresult"}}],[11,"to_prev","","Moves to previous key",19,{"inputs":[{"name":"iterator"}],"output":{"name":"fdbresult"}}],[11,"get_doc","","Retrieve full document from current position",19,{"inputs":[{"name":"iterator"}],"output":{"name":"fdbresult"}}],[11,"get_meta_only","","Retrieve only document metadata from current position",19,{"inputs":[{"name":"iterator"}],"output":{"name":"fdbresult"}}],[11,"to_min_key","","Move to the min key in range",19,{"inputs":[{"name":"iterator"}],"output":{"name":"fdbresult"}}],[11,"to_max_key","","Move to the max key in range",19,{"inputs":[{"name":"iterator"}],"output":{"name":"fdbresult"}}],[11,"to_key","","Moves to specified key, uses options to determine what to do\nif key wasn't found",19,{"inputs":[{"name":"iterator"},{"name":"k"},{"name":"seekoptions"}],"output":{"name":"fdbresult"}}],[11,"drop","","",19,{"inputs":[{"name":"iterator"}],"output":null}],[11,"with_key","","",4,{"inputs":[{"name":"location"},{"name":"k"}],"output":{"name":"location"}}],[11,"with_key","","Create a new document with specified key",20,{"inputs":[{"name":"doc"},{"name":"k"}],"output":{"name":"fdbresult"}}],[11,"get_raw_key","","",20,{"inputs":[{"name":"doc"}],"output":{"name":"option"}}],[11,"set_body","","",20,{"inputs":[{"name":"doc"},{"name":"b"}],"output":{"name":"fdbresult"}}],[11,"set_meta","","",20,{"inputs":[{"name":"doc"},{"name":"m"}],"output":{"name":"fdbresult"}}],[11,"get_raw_body","","",20,{"inputs":[{"name":"doc"}],"output":{"name":"option"}}],[11,"get_raw_meta","","",20,{"inputs":[{"name":"doc"}],"output":{"name":"option"}}],[11,"seq_num","","Sequence number assigned to the doc",20,{"inputs":[{"name":"doc"}],"output":{"name":"u64"}}],[11,"is_deleted","","Is doc deleted?",20,{"inputs":[{"name":"doc"}],"output":{"name":"bool"}}],[11,"offset","","Offset to the doc on disk",20,{"inputs":[{"name":"doc"}],"output":{"name":"u64"}}],[11,"into_doc","","Convert into doc for update",21,{"inputs":[{"name":"meta"}],"output":{"name":"doc"}}],[11,"get_raw_key","","",21,{"inputs":[{"name":"meta"}],"output":{"name":"option"}}],[11,"get_raw_meta","","",21,{"inputs":[{"name":"meta"}],"output":{"name":"option"}}],[11,"seq_num","","Sequence number assigned to the doc",21,{"inputs":[{"name":"meta"}],"output":{"name":"u64"}}],[11,"is_deleted","","Is doc deleted?",21,{"inputs":[{"name":"meta"}],"output":{"name":"bool"}}],[11,"offset","","Offset to the doc on disk",21,{"inputs":[{"name":"meta"}],"output":{"name":"u64"}}],[6,"Item","","",null,null],[11,"next","","",19,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"size_hint","","",19,null],[6,"Item","","",null,null],[11,"next","","",19,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"size_hint","","",19,null],[11,"min_key","core::ops","",22,{"inputs":[{"name":"rangefull"}],"output":{"name":"option"}}],[11,"max_key","","",22,{"inputs":[{"name":"rangefull"}],"output":{"name":"option"}}],[11,"min_key","","",23,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"max_key","","",23,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"options","","",23,{"inputs":[{"name":"range"}],"output":{"name":"iteratoroptions"}}],[11,"min_key","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"max_key","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"min_key","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"max_key","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"min_seq","","",22,{"inputs":[{"name":"rangefull"}],"output":{"name":"u64"}}],[11,"max_seq","","",22,{"inputs":[{"name":"rangefull"}],"output":{"name":"u64"}}],[11,"min_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"max_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"min_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"max_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"min_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"max_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"min_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"max_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"min_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"max_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"min_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"max_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"min_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"max_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"min_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"max_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"min_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"max_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"min_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"max_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"min_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"max_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"min_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"max_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"min_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"max_seq","","",23,{"inputs":[{"name":"range"}],"output":{"name":"u64"}}],[11,"min_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"max_seq","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"u64"}}],[11,"min_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"max_seq","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"u64"}}],[11,"from_bytes","collections::string","",26,null],[11,"from_bytes","collections::vec","",27,null]],"paths":[[4,"CommitOptions"],[4,"IsolationLevel"],[4,"SeekOptions"],[4,"Durability"],[4,"Location"],[8,"KeyRange"],[8,"SeqRange"],[8,"DocKey"],[8,"DocBody"],[8,"DocMeta"],[8,"FromBytes"],[3,"Error"],[3,"IteratorOptions"],[3,"Config"],[3,"ConfigBuilder"],[3,"FileHandle"],[3,"FileHandleInfo"],[3,"StoreConfig"],[3,"KvHandle"],[3,"Iterator"],[3,"Doc"],[3,"Meta"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[3,"String"],[3,"Vec"]]};
initSearch(searchIndex);
